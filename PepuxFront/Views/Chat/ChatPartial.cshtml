@using Microsoft.Ajax.Utilities
@using PepuxFront.Controllers

<style>
    .hide {
        display: none;
    }

    .chatbox {
        font-family: tahoma;
        font-size: 12px;
        color: black;
        border: 1px teal solid;
        height: 225px;
        width: 100%;
        overflow: scroll;
        float: left;
    }
</style>

<div id="chatdiv" class="hide">
    <fieldset>
        <legend>Чат вирутальной переговорной комнаты</legend>
        <form onsubmit="return user.send_message()">
            <div id="chatbox" class="chatbox"></div>
            <br />
            <input id="chatinput" type="text" size=200 / >
            <input id="chatsend" type="button" onclick="user.send_message()" value="Отправить" / >
        </form>
    </fieldset>
</div>
<script type="text/javascript">
    var user = {
        node: null,
        conference: null,
        event_source: null,

        start_events: function () {
            this.event_source.addEventListener("message_received", user.receive_message.bind(this), false);
            return true;
        },
        send_message: function () {
            var chatinput_element = document.getElementById("chatinput");
            var call_data = {
                "type": "text/plain",
                "payload": chatinput_element.value
            };
            this.post_request("message", call_data);
            this.display_message("Me", chatinput_element.value);
            chatinput_element.value = "";
            return false;
        },

        receive_message: function (event) {
            message_data = JSON.parse(event.data);
            console.log("message " + message_data["origin"] + " " + message_data["payload"]);
            this.display_message(message_data["origin"], message_data["payload"]);
        },

        display_message: function (origin, message) {
            var chatbox_element = document.getElementById("chatbox");
            if (this.last_message_origin != origin) {
                this.last_message_origin = origin;
                var origin_element = document.createElement("span");
                origin_element.className = "message_origin";
                origin_element.innerHTML = origin + "<br/>";
                chatbox_element.appendChild(origin_element);
            }
            var message_element = document.createElement("span");
            message_element.className = "message";
            message_element.innerHTML = message + "<br/>";
            chatbox_element.appendChild(message_element);
            chatbox_element.scrollTop = chatbox_element.scrollHeight;
        },
        post_request: function (command, data) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.open("POST", "https://" + this.node + "/api/client/v2/conferences/" + this.conference + "/" + command, false);
            if (this.token) {
                xmlhttp.setRequestHeader("token", this.token);
            }
            if (this.pin) {
                xmlhttp.setRequestHeader("pin", this.pin);
            }
            try {
                if (data) {
                    xmlhttp.setRequestHeader("Content-Type", "application/json");
                    xmlhttp.send(JSON.stringify(data));
                } else {
                    xmlhttp.send();
                }
                console.log("responseText " + xmlhttp.responseText);
                return { "status": xmlhttp.status, "data": JSON.parse(xmlhttp.responseText) };
            } catch (exception) {
                console.log("Exception during post_request");
                return { "status": xmlhttp.status, "data": { "reason": exception.toString() } };
            }
        },
    };
</script>

