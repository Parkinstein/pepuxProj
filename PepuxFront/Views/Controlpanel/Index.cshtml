@using System.ServiceModel.Configuration
@using Microsoft.Ajax.Utilities
@using PepuxFront.Controllers
@model PepuxFront.IpServiceLink.ActiveConfs
<div class="control_grid">
    @(Html.Kendo().Grid<PepuxFront.IpServiceLink.ActiveConfs>
        ()
        .Name("acgrid")

        //.Pdf(m => { m.FileName(AccountController.Uname + "_" + DateTime.Now + ".pdf");
        //m.AllPages();
        //})

        //.Excel(m => { m.FileName(AccountController.Uname + "_" + DateTime.Now + ".xlsx");
        //m.AllPages(true);
        //m.Filterable(true);
        //})

        //.ToolBar(m => { m.Pdf();
        //m.Excel();
        //})

        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("ActiveConf_Read", "Admin"))
            .AutoSync(true)
            .PageSize(20)
        )
        .Columns(columns =>
        {
            columns.Bound(product => product.name).Title("Название конференции");
            columns.Bound(product => product.start_time2).Title("Время начала");
            columns.Bound(product => product.lock_path).Title("Блокировка").Encoded(false).ClientTemplate(@"<div class='fa fa-unlock fa-fw brand-color k-grid-unlock'></div>");
            columns.Bound(i => i.name).Title("Список участников").ClientTemplate(@Html.ActionLink("Участники", "GetParticipants", "Admin", new { confname = "#= name #" }, new { @class = "modal-link btn btn-success" }).ToHtmlString());
            columns.Bound(i => i.name).Title("Управление").ClientTemplate(@Html.ActionLink("Управлять", "Control", "Controlpanel", new { confname = "#= name #", dispname = AccountController.Uname }, new { @class = "modal-link btn btn-success" }).ToHtmlString());

        })

        .Scrollable()

        .Pageable(pageable =>
        {
            pageable.ButtonCount(5);
            pageable.Messages(messages => messages.Display("{0} - {1} из {2} страниц"));
            pageable.Messages(messages => messages.Empty("Нет записей"));
            pageable.Messages(messages => messages.Page("Страница"));
            pageable.Messages(messages => messages.Of("из {0}"));
            pageable.Messages(messages => messages.ItemsPerPage("записей на странице"));
            pageable.Messages(messages => messages.First("Перейти на первую страницу"));
            pageable.Messages(messages => messages.Previous("Перейти на предыдущую страницу"));
            pageable.Messages(messages => messages.Next("Перейти на следующую страницу"));
            pageable.Messages(messages => messages.Last("Перейти на последнюю страницу"));
            pageable.Messages(messages => messages.Refresh("Обновить"));
            pageable.Numeric(true);
            pageable.PreviousNext(true);
        })

        .Sortable()
    )


        </div>
    <script type="text/javascript">

        $(function () {
            setInterval(function () { $("#acgrid").data("kendoGrid").dataSource.fetch(); }, 30000);
        });

    </script>
    <script>
        $(document).ready(function () {
            $("a[href^='http:']:not([href*='" + window.location.host + "'])").each(function () {
                $(this).attr("target", "_blank");
            });
        });

    </script>

