#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PepuxFront.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="scheduler")]
	public partial class DatabsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertAllVmr(AllVmr instance);
    partial void UpdateAllVmr(AllVmr instance);
    partial void DeleteAllVmr(AllVmr instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertMeeting(Meeting instance);
    partial void UpdateMeeting(Meeting instance);
    partial void DeleteMeeting(Meeting instance);
    partial void InsertMeetingAttendee(MeetingAttendee instance);
    partial void UpdateMeetingAttendee(MeetingAttendee instance);
    partial void DeleteMeetingAttendee(MeetingAttendee instance);
    #endregion
		
		public DatabsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["schedulerConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Service> Service
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<AllVmr> AllVmrs
		{
			get
			{
				return this.GetTable<AllVmr>();
			}
		}
		
		public System.Data.Linq.Table<VmrAliase> VmrAliases
		{
			get
			{
				return this.GetTable<VmrAliase>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<Meeting> Meetings
		{
			get
			{
				return this.GetTable<Meeting>();
			}
		}
		
		public System.Data.Linq.Table<MeetingAttendee> MeetingAttendees
		{
			get
			{
				return this.GetTable<MeetingAttendee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Role;
		
		private string _AdName;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnAdNameChanging(string value);
    partial void OnAdNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdName", DbType="NVarChar(255)")]
		public string AdName
		{
			get
			{
				return this._AdName;
			}
			set
			{
				if ((this._AdName != value))
				{
					this.OnAdNameChanging(value);
					this.SendPropertyChanging();
					this._AdName = value;
					this.SendPropertyChanged("AdName");
					this.OnAdNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllVmrs")]
	public partial class AllVmr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<bool> _allow_guests;
		
		private string _description;
		
		private System.Nullable<bool> _force_presenter_into_main;
		
		private string _guest_pin;
		
		private string _guest_view;
		
		private string _host_view;
		
		private string _ivr_theme_;
		
		private string _max_callrate_in_;
		
		private string _max_callrate_out_;
		
		private string _name;
		
		private string _participant_limit;
		
		private string _pin;
		
		private string _resource_uri;
		
		private string _service_type;
		
		private string _tag;
		
		private System.Nullable<int> _vmid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onallow_guestsChanging(System.Nullable<bool> value);
    partial void Onallow_guestsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onforce_presenter_into_mainChanging(System.Nullable<bool> value);
    partial void Onforce_presenter_into_mainChanged();
    partial void Onguest_pinChanging(string value);
    partial void Onguest_pinChanged();
    partial void Onguest_viewChanging(string value);
    partial void Onguest_viewChanged();
    partial void Onhost_viewChanging(string value);
    partial void Onhost_viewChanged();
    partial void Onivr_theme_Changing(string value);
    partial void Onivr_theme_Changed();
    partial void Onmax_callrate_in_Changing(string value);
    partial void Onmax_callrate_in_Changed();
    partial void Onmax_callrate_out_Changing(string value);
    partial void Onmax_callrate_out_Changed();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onparticipant_limitChanging(string value);
    partial void Onparticipant_limitChanged();
    partial void OnpinChanging(string value);
    partial void OnpinChanged();
    partial void Onresource_uriChanging(string value);
    partial void Onresource_uriChanged();
    partial void Onservice_typeChanging(string value);
    partial void Onservice_typeChanged();
    partial void OntagChanging(string value);
    partial void OntagChanged();
    partial void OnvmidChanging(System.Nullable<int> value);
    partial void OnvmidChanged();
    #endregion
		
		public AllVmr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allow_guests", DbType="Bit")]
		public System.Nullable<bool> allow_guests
		{
			get
			{
				return this._allow_guests;
			}
			set
			{
				if ((this._allow_guests != value))
				{
					this.Onallow_guestsChanging(value);
					this.SendPropertyChanging();
					this._allow_guests = value;
					this.SendPropertyChanged("allow_guests");
					this.Onallow_guestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_force_presenter_into_main", DbType="Bit")]
		public System.Nullable<bool> force_presenter_into_main
		{
			get
			{
				return this._force_presenter_into_main;
			}
			set
			{
				if ((this._force_presenter_into_main != value))
				{
					this.Onforce_presenter_into_mainChanging(value);
					this.SendPropertyChanging();
					this._force_presenter_into_main = value;
					this.SendPropertyChanged("force_presenter_into_main");
					this.Onforce_presenter_into_mainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_pin", DbType="NVarChar(50)")]
		public string guest_pin
		{
			get
			{
				return this._guest_pin;
			}
			set
			{
				if ((this._guest_pin != value))
				{
					this.Onguest_pinChanging(value);
					this.SendPropertyChanging();
					this._guest_pin = value;
					this.SendPropertyChanged("guest_pin");
					this.Onguest_pinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_view", DbType="NVarChar(MAX)")]
		public string guest_view
		{
			get
			{
				return this._guest_view;
			}
			set
			{
				if ((this._guest_view != value))
				{
					this.Onguest_viewChanging(value);
					this.SendPropertyChanging();
					this._guest_view = value;
					this.SendPropertyChanged("guest_view");
					this.Onguest_viewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host_view", DbType="NVarChar(MAX)")]
		public string host_view
		{
			get
			{
				return this._host_view;
			}
			set
			{
				if ((this._host_view != value))
				{
					this.Onhost_viewChanging(value);
					this.SendPropertyChanging();
					this._host_view = value;
					this.SendPropertyChanged("host_view");
					this.Onhost_viewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ivr_theme ]", Storage="_ivr_theme_", DbType="NVarChar(MAX)")]
		public string ivr_theme_
		{
			get
			{
				return this._ivr_theme_;
			}
			set
			{
				if ((this._ivr_theme_ != value))
				{
					this.Onivr_theme_Changing(value);
					this.SendPropertyChanging();
					this._ivr_theme_ = value;
					this.SendPropertyChanged("ivr_theme_");
					this.Onivr_theme_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[max_callrate_in ]", Storage="_max_callrate_in_", DbType="NVarChar(50)")]
		public string max_callrate_in_
		{
			get
			{
				return this._max_callrate_in_;
			}
			set
			{
				if ((this._max_callrate_in_ != value))
				{
					this.Onmax_callrate_in_Changing(value);
					this.SendPropertyChanging();
					this._max_callrate_in_ = value;
					this.SendPropertyChanged("max_callrate_in_");
					this.Onmax_callrate_in_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[max_callrate_out ]", Storage="_max_callrate_out_", DbType="NVarChar(50)")]
		public string max_callrate_out_
		{
			get
			{
				return this._max_callrate_out_;
			}
			set
			{
				if ((this._max_callrate_out_ != value))
				{
					this.Onmax_callrate_out_Changing(value);
					this.SendPropertyChanging();
					this._max_callrate_out_ = value;
					this.SendPropertyChanged("max_callrate_out_");
					this.Onmax_callrate_out_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_participant_limit", DbType="NVarChar(50)")]
		public string participant_limit
		{
			get
			{
				return this._participant_limit;
			}
			set
			{
				if ((this._participant_limit != value))
				{
					this.Onparticipant_limitChanging(value);
					this.SendPropertyChanging();
					this._participant_limit = value;
					this.SendPropertyChanged("participant_limit");
					this.Onparticipant_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin", DbType="NVarChar(10)")]
		public string pin
		{
			get
			{
				return this._pin;
			}
			set
			{
				if ((this._pin != value))
				{
					this.OnpinChanging(value);
					this.SendPropertyChanging();
					this._pin = value;
					this.SendPropertyChanged("pin");
					this.OnpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resource_uri", DbType="NVarChar(MAX)")]
		public string resource_uri
		{
			get
			{
				return this._resource_uri;
			}
			set
			{
				if ((this._resource_uri != value))
				{
					this.Onresource_uriChanging(value);
					this.SendPropertyChanging();
					this._resource_uri = value;
					this.SendPropertyChanged("resource_uri");
					this.Onresource_uriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_type", DbType="NVarChar(255)")]
		public string service_type
		{
			get
			{
				return this._service_type;
			}
			set
			{
				if ((this._service_type != value))
				{
					this.Onservice_typeChanging(value);
					this.SendPropertyChanging();
					this._service_type = value;
					this.SendPropertyChanged("service_type");
					this.Onservice_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="NVarChar(MAX)")]
		public string tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vmid", DbType="Int")]
		public System.Nullable<int> vmid
		{
			get
			{
				return this._vmid;
			}
			set
			{
				if ((this._vmid != value))
				{
					this.OnvmidChanging(value);
					this.SendPropertyChanging();
					this._vmid = value;
					this.SendPropertyChanged("vmid");
					this.OnvmidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VmrAliases")]
	public partial class VmrAliase
	{
		
		private int _Id;
		
		private string _alias;
		
		private string _conference;
		
		private string _description;
		
		private System.Nullable<int> _vmid;
		
		public VmrAliase()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="NVarChar(MAX)")]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this._alias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conference", DbType="NVarChar(255)")]
		public string conference
		{
			get
			{
				return this._conference;
			}
			set
			{
				if ((this._conference != value))
				{
					this._conference = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vmid", DbType="Int")]
		public System.Nullable<int> vmid
		{
			get
			{
				return this._vmid;
			}
			set
			{
				if ((this._vmid != value))
				{
					this._vmid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskID;
		
		private System.DateTime _Start;
		
		private System.DateTime _End;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _OwnerID;
		
		private bool _IsAllDay;
		
		private string _RecurrenceRule;
		
		private System.Nullable<int> _RecurrenceID;
		
		private string _RecurrenceException;
		
		private string _StartTimezone;
		
		private string _EndTimezone;
		
		private EntitySet<Task> _Tasks;
		
		private EntityRef<Task> _Task1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnStartChanging(System.DateTime value);
    partial void OnStartChanged();
    partial void OnEndChanging(System.DateTime value);
    partial void OnEndChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerIDChanging(System.Nullable<int> value);
    partial void OnOwnerIDChanged();
    partial void OnIsAllDayChanging(bool value);
    partial void OnIsAllDayChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    partial void OnRecurrenceIDChanging(System.Nullable<int> value);
    partial void OnRecurrenceIDChanged();
    partial void OnRecurrenceExceptionChanging(string value);
    partial void OnRecurrenceExceptionChanged();
    partial void OnStartTimezoneChanging(string value);
    partial void OnStartTimezoneChanged();
    partial void OnEndTimezoneChanging(string value);
    partial void OnEndTimezoneChanged();
    #endregion
		
		public Task()
		{
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			this._Task1 = default(EntityRef<Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[End]", Storage="_End", DbType="DateTime NOT NULL")]
		public System.DateTime End
		{
			get
			{
				return this._End;
			}
			set
			{
				if ((this._End != value))
				{
					this.OnEndChanging(value);
					this.SendPropertyChanging();
					this._End = value;
					this.SendPropertyChanged("End");
					this.OnEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDay", DbType="Bit NOT NULL")]
		public bool IsAllDay
		{
			get
			{
				return this._IsAllDay;
			}
			set
			{
				if ((this._IsAllDay != value))
				{
					this.OnIsAllDayChanging(value);
					this.SendPropertyChanging();
					this._IsAllDay = value;
					this.SendPropertyChanged("IsAllDay");
					this.OnIsAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceID", DbType="Int")]
		public System.Nullable<int> RecurrenceID
		{
			get
			{
				return this._RecurrenceID;
			}
			set
			{
				if ((this._RecurrenceID != value))
				{
					if (this._Task1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecurrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceID = value;
					this.SendPropertyChanged("RecurrenceID");
					this.OnRecurrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceException", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RecurrenceException
		{
			get
			{
				return this._RecurrenceException;
			}
			set
			{
				if ((this._RecurrenceException != value))
				{
					this.OnRecurrenceExceptionChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceException = value;
					this.SendPropertyChanged("RecurrenceException");
					this.OnRecurrenceExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimezone", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string StartTimezone
		{
			get
			{
				return this._StartTimezone;
			}
			set
			{
				if ((this._StartTimezone != value))
				{
					this.OnStartTimezoneChanging(value);
					this.SendPropertyChanging();
					this._StartTimezone = value;
					this.SendPropertyChanged("StartTimezone");
					this.OnStartTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTimezone", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string EndTimezone
		{
			get
			{
				return this._EndTimezone;
			}
			set
			{
				if ((this._EndTimezone != value))
				{
					this.OnEndTimezoneChanging(value);
					this.SendPropertyChanging();
					this._EndTimezone = value;
					this.SendPropertyChanged("EndTimezone");
					this.OnEndTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_Task", Storage="_Tasks", ThisKey="TaskID", OtherKey="RecurrenceID")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_Task", Storage="_Task1", ThisKey="RecurrenceID", OtherKey="TaskID", IsForeignKey=true)]
		public Task Task1
		{
			get
			{
				return this._Task1.Entity;
			}
			set
			{
				Task previousValue = this._Task1.Entity;
				if (((previousValue != value) 
							|| (this._Task1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task1.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Task1.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._RecurrenceID = value.TaskID;
					}
					else
					{
						this._RecurrenceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Task1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Task1 = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Task1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meetings")]
	public partial class Meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingID;
		
		private System.DateTime _Start;
		
		private System.DateTime _End;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _RoomID;
		
		private bool _IsAllDay;
		
		private string _RecurrenceRule;
		
		private System.Nullable<int> _RecurrenceID;
		
		private string _RecurrenceException;
		
		private string _StartTimezone;
		
		private string _EndTimezone;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntitySet<MeetingAttendee> _MeetingAttendees;
		
		private EntityRef<Meeting> _Meeting1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingIDChanging(int value);
    partial void OnMeetingIDChanged();
    partial void OnStartChanging(System.DateTime value);
    partial void OnStartChanged();
    partial void OnEndChanging(System.DateTime value);
    partial void OnEndChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRoomIDChanging(System.Nullable<int> value);
    partial void OnRoomIDChanged();
    partial void OnIsAllDayChanging(bool value);
    partial void OnIsAllDayChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    partial void OnRecurrenceIDChanging(System.Nullable<int> value);
    partial void OnRecurrenceIDChanged();
    partial void OnRecurrenceExceptionChanging(string value);
    partial void OnRecurrenceExceptionChanged();
    partial void OnStartTimezoneChanging(string value);
    partial void OnStartTimezoneChanged();
    partial void OnEndTimezoneChanging(string value);
    partial void OnEndTimezoneChanged();
    #endregion
		
		public Meeting()
		{
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._MeetingAttendees = new EntitySet<MeetingAttendee>(new Action<MeetingAttendee>(this.attach_MeetingAttendees), new Action<MeetingAttendee>(this.detach_MeetingAttendees));
			this._Meeting1 = default(EntityRef<Meeting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingID
		{
			get
			{
				return this._MeetingID;
			}
			set
			{
				if ((this._MeetingID != value))
				{
					this.OnMeetingIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingID = value;
					this.SendPropertyChanged("MeetingID");
					this.OnMeetingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[End]", Storage="_End", DbType="DateTime NOT NULL")]
		public System.DateTime End
		{
			get
			{
				return this._End;
			}
			set
			{
				if ((this._End != value))
				{
					this.OnEndChanging(value);
					this.SendPropertyChanging();
					this._End = value;
					this.SendPropertyChanged("End");
					this.OnEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int")]
		public System.Nullable<int> RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDay", DbType="Bit NOT NULL")]
		public bool IsAllDay
		{
			get
			{
				return this._IsAllDay;
			}
			set
			{
				if ((this._IsAllDay != value))
				{
					this.OnIsAllDayChanging(value);
					this.SendPropertyChanging();
					this._IsAllDay = value;
					this.SendPropertyChanged("IsAllDay");
					this.OnIsAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceID", DbType="Int")]
		public System.Nullable<int> RecurrenceID
		{
			get
			{
				return this._RecurrenceID;
			}
			set
			{
				if ((this._RecurrenceID != value))
				{
					if (this._Meeting1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecurrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceID = value;
					this.SendPropertyChanged("RecurrenceID");
					this.OnRecurrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceException", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RecurrenceException
		{
			get
			{
				return this._RecurrenceException;
			}
			set
			{
				if ((this._RecurrenceException != value))
				{
					this.OnRecurrenceExceptionChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceException = value;
					this.SendPropertyChanged("RecurrenceException");
					this.OnRecurrenceExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimezone", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string StartTimezone
		{
			get
			{
				return this._StartTimezone;
			}
			set
			{
				if ((this._StartTimezone != value))
				{
					this.OnStartTimezoneChanging(value);
					this.SendPropertyChanging();
					this._StartTimezone = value;
					this.SendPropertyChanged("StartTimezone");
					this.OnStartTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTimezone", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string EndTimezone
		{
			get
			{
				return this._EndTimezone;
			}
			set
			{
				if ((this._EndTimezone != value))
				{
					this.OnEndTimezoneChanging(value);
					this.SendPropertyChanging();
					this._EndTimezone = value;
					this.SendPropertyChanged("EndTimezone");
					this.OnEndTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Meeting", Storage="_Meetings", ThisKey="MeetingID", OtherKey="RecurrenceID")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_MeetingAttendee", Storage="_MeetingAttendees", ThisKey="MeetingID", OtherKey="MeetingID")]
		public EntitySet<MeetingAttendee> MeetingAttendees
		{
			get
			{
				return this._MeetingAttendees;
			}
			set
			{
				this._MeetingAttendees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Meeting", Storage="_Meeting1", ThisKey="RecurrenceID", OtherKey="MeetingID", IsForeignKey=true)]
		public Meeting Meeting1
		{
			get
			{
				return this._Meeting1.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting1.Entity;
				if (((previousValue != value) 
							|| (this._Meeting1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting1.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._Meeting1.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._RecurrenceID = value.MeetingID;
					}
					else
					{
						this._RecurrenceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Meeting1 = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Meeting1 = null;
		}
		
		private void attach_MeetingAttendees(MeetingAttendee entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_MeetingAttendees(MeetingAttendee entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingAttendees")]
	public partial class MeetingAttendee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingID;
		
		private int _AttendeeID;
		
		private EntityRef<Meeting> _Meeting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingIDChanging(int value);
    partial void OnMeetingIDChanged();
    partial void OnAttendeeIDChanging(int value);
    partial void OnAttendeeIDChanged();
    #endregion
		
		public MeetingAttendee()
		{
			this._Meeting = default(EntityRef<Meeting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MeetingID
		{
			get
			{
				return this._MeetingID;
			}
			set
			{
				if ((this._MeetingID != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingID = value;
					this.SendPropertyChanged("MeetingID");
					this.OnMeetingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendeeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttendeeID
		{
			get
			{
				return this._AttendeeID;
			}
			set
			{
				if ((this._AttendeeID != value))
				{
					this.OnAttendeeIDChanging(value);
					this.SendPropertyChanging();
					this._AttendeeID = value;
					this.SendPropertyChanged("AttendeeID");
					this.OnAttendeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_MeetingAttendee", Storage="_Meeting", ThisKey="MeetingID", OtherKey="MeetingID", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.MeetingAttendees.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.MeetingAttendees.Add(this);
						this._MeetingID = value.MeetingID;
					}
					else
					{
						this._MeetingID = default(int);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
